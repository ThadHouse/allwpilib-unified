apply plugin: 'java'

evaluationDependsOn(':ntcore')
evaluationDependsOn(':cscore')
evaluationDependsOn(':hal')
evaluationDependsOn(':wpiutil')
evaluationDependsOn(':cameraserver')
evaluationDependsOn(':wpilibj')

configurations {
    javaSource
}

ext {
    useDocumentation = true
}

apply from: "${rootDir}/shared/opencv.gradle"

def javaDepLocation = "${buildDir}/javaSrc"

task downloadOpenCv(type: Sync) {
    dependsOn configurations.javaSource

    from {
        configurations.javaSource.collect {
            zipTree(it)
        }
    }
    into javaDepLocation
}

sourceSets {
    docs {
        java {
           srcDir javaDepLocation
        }
    }
}

task generateJavaDocs(type: Javadoc) {
    javadoc.options.links("http://docs.oracle.com/javase/8/docs/api/")
    options.addStringOption "tag", "pre:a:Pre-Condition"
    options.addStringOption('Xdoclint:accessibility,syntax,html', '-quiet')
    source project(':hal').sourceSets.main.java
    source project(':wpiutil').sourceSets.main.java
    source project(':wpilibj').sourceSets.main.java
    source project(':wpilibj').sourceSets.generated.java
    source project(':cscore').sourceSets.main.java
    source project(':ntcore').sourceSets.main.java
    source project(':cameraserver').sourceSets.main.java
    source sourceSets.docs.java
    failOnError = true
}

generateJavaDocs.dependsOn downloadOpenCv
generateJavaDocs.dependsOn project(':wpilibj').generateJavaVersion

checkstyleDocs {
    checkstyleDocs.enabled = false
}

task zipJavaDocs(type: Zip) {
    baseName = 'javaDocs'
    destinationDir = buildDir
    dependsOn generateJavaDocs
    from ("$buildDir/docs/javadoc")
    into '/'
}
